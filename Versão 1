#include <iostream>
#include <stdio.h>
using namespace std;
int main() {
	int rep;
	do {
		system("cls");
		cout << "Atualizado em 25/01/2020 às 20:04:00 (UTC -3), após 8 horas de dedicação, de acordo com as notas de corte parciais do SISU." <<endl<<"Doações na conta poupança 83827-1"<<endl<<"Agência CAIXA ECONÔMICA FEDERAL 3939-0"<<endl<<"Operação 013"<<endl<<"CPF 076333221-60."<<endl<<"Ou no endereço bitcoin:"<<endl<<"bc1qhqns4g0q6gv7xau64rqva087erxp0ndtcrx200"<<endl<<""<<endl<<"Seja bem vindo ao simulador do SISU 2020/1, um projeto independente do acadêmico de Engenharia Civil, Gabriel Miranda de Oliveira." << endl << " Contato: gabriel.miranda@mail.uft.edu.br." << endl << "Ofereço aulas de reforço, detalhes no whatsapp(63)981125083" << endl << "" << endl;
		cout << "Algoritmo em linguagem c++ que calcula cursos compatíveis com a nota do pretendente à vaga na Universidade Federal do Tocantins em 2020/1 via SISU, desenvolvido por Gabriel Miranda de Oliveira" << endl;
		cout << "Utilize .(ponto) como separador decimal. " << endl << " " << endl;
		cout << "Digite a nota em linguagens: " << endl;
		float lin;
		cin >> lin;
		cout << " " << endl;
		cout << "Digite a nota em redação: " << endl;
		float red;
		cin >> red;
		cout << " " << endl;
		cout << "Digite a nota em ciências humanas: " << endl;
		float hum;
		cin >> hum;
		cout << " " << endl;
		cout << "Digite a nota em matemática: " << endl;
		float mat;
		cin >> mat;
		cout << " " << endl;
		cout << "Digite a nota em ciências da natureza: " << endl;
		float nat;
		cin >> nat;
		cout << " " << endl;
		cout << "Você cursou integralmente o ensino médio em escolas públicas? " << endl;
		cout << "Digite 1 para Não e 2 para Sim. " << endl;
		int esc;
		cin >> esc;
		cout << " " << endl;
		cout << "Você é indígena? " << endl;
		cout << "Digite 1 para Não e 2 para Sim. " << endl;
		int ind;
		cin >> ind;
		cout << " " << endl;
		cout << "Você é negro, pardo ou indígena? " << endl;
		cout << "Digite 1 para Não e 2 para Sim. " << endl;
		int cor;
		cin >> cor;
		cout << " " << endl;
		cout << "Você tem renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo? " << endl;
		cout << "Digite 1 para Não e 2 para Sim. " << endl;
		int ren;
		cin >> ren;
		cout << " " << endl;
		cout << "Você é portador de deficiência inscrita na Classificação Internacional de Doença? " << endl;
		cout << "Digite 1 para Não e 2 para Sim. " << endl;
		int def;
		cin >> def;
		cout << " " << endl;
		cout << "Você é quilombola? " << endl;
		cout << "Digite 1 para Não e 2 para Sim. " << endl;
		int qui;
		cin >> qui;
		cout << " " << endl;
		cout << "Você passaria nos seguintes cursos: " << endl;
		cout << " " << endl;
		//retirei um centésimo das notas de corte por conta do arredondamento feito pelo MEC
		// ANALISAR NOTAS DE CORTE PARCIAIS
		{
			cout << "Universidade Federal do Tocantins, Campus Palmas:" << endl << " " << endl;
			float admn = (((red + nat + (hum * 2) + (lin * 4) + (mat * 4)) / 12));
			float adm = 656.7;
			float adma1 = 519.17;
			float adma2 = 608.43;
			float adml1 = 650.05;
			float adml2 = 630.35;
			float adml5 = 637.39;
			float adml6 = 618.87;
			float adml10 = 583.78;
			float adml14 = 611.32;
			float arqn = (((red + nat + hum + lin + mat) / 5));
			float arq = 717.35;
			float arqa1 = 555.07;
			float arqa2 = 576.43;
			float arql2 = 663.01;
			float arql6 = 673.89;
			float arql10 = 603.95; 
			float arql14 = 552.43;
			float comn = (((red + (nat * 3) + hum + (lin * 4) + (mat * 4)) / 13));
			float com = 660.92;
			float coma1 = 471.04;
			float coma2 = 536.17;
			float coml1 = 588.04;
			float coml2 = 632.99;
			float coml5 = 663.91;
			float coml6 = 636.39;
			float coml10 = 632.92;
			float coml14 = 482.35;
			float conn = ((((red * 2) + nat + (hum * 3) + (lin * 4) + (mat * 3)) / 13));
			float con = 646.6;
			float cona1 = 536.17;
			float cona2 = 600.37;
			float conl1 = 638.61;
			float conl2 = 642.14;
			float conl5 = 662.65;
			float conl6 = 643.65;
			float conl10 = 551.22;
			float conl14 = 643.65;
			float econ = ((((red * 2) + nat + (hum * 3) + (lin * 3) + (mat * 3)) / 12));
			float eco = 669.77;
			float ecoa1 = 0.01; //SEM
			float ecoa2 = 667.68;
			float ecol1 = 630.3;
			float ecol2 = 608.33;
			float ecol5 = 676.67;
			float ecol6 = 641.65;
			float ecol10 = 504.61;
			float ecol14 = 555.21;
			float dirn = (((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12));
			float dir = 690.41;
			float dira1 = 560.56;
			float dira2 = 643.5;
			float dirl1 = 680.03;
			float dirl2 = 655.7;
			float dirl5 = 678.95;
			float dirl6 = 682.06;
			float dirl10 = 603.25;
			float dirl14 = 627.17;
			float enfn = (((red + (nat * 4) + hum + (lin * 4) + (mat * 3)) / 13));
			float enf = 690.8;
			float enfa1 = 554.71;
			float enfa2 = 584.22;
			float enfl2 = 637.92;
			float enfl6 = 662.34;
			float enfl10 = 545.16;
			float ambn = (((red + (nat * 3) + (hum * 2) + (lin * 2) + (mat * 3)) / 11));
			float amb = 633.64;
			float amba1 = 518.18;
			float amba2 = 554.89;
			float ambl1 = 626.14;
			float ambl2 = 605.47;
			float ambl5 = 647.54;
			float ambl6 = 622.09;
			float ambl10 = 0.01; // SEM
			float ambl14 = 0.01; // SEM
			float civn = (((red + (nat * 4) + hum + (lin * 3) + (mat * 4)) / 13));
			float civ = 682.63;
			float civa1 = 516.86;
			float civa2 = 591.01;
			float civl1 = 617.99;
			float civl2 = 647.29;
			float civl5 = 685.19;
			float civl6 = 650.2;
			float civl10 = 509.31;
			float civl14 = 541.3;
			float alin = ((((red * 2) + (nat * 4) + hum + (lin * 2) + (mat * 4)) / 13));
			float ali = 619.53;
			float alia1 = 0.01; // SEM
			float alia2 = 542.36;
 			float alil1 = 633.78;
			float alil2 = 600.25;
			float alil5 = 589.79;
			float alil6 = 608.74;
			float alil10 = 422.83;
			float alil14 = 0.01; // SEM
			float elen = (((red + (nat * 3) + hum + (lin * 4) + (mat * 4)) / 13));
			float ele = 660.92;
			float elea1 = 0.01; // SEM
			float elea2 = 623.15;
			float elel1 = 661.87;
			float elel2 = 641.81;
			float elel5 = 556.97;
			float elel6 = 636.18;
			float elel10 = 0.01; //SEM
			float elel14 = 396.12;
			float filn = ((((red * 2) + nat + (hum * 4) + (lin * 4) + mat) / 12));
			float fil = 599.87;
			float fila1 = 514.68;
			float fila2 = 498.12;
			float fill1 = 609.46;
			float fill2 = 582.55;
			float fill5 = 652.25;
			float fill6 = 597.52;
			float fill10 = 511.92;
			float fill14 = 0.01; // SEM
			float jorn = ((((red * 3) + nat + (hum * 3) + (lin * 4) + (mat * 2)) / 13));
			float jor = 685.11;
			float jora1 = 524.17;
			float jora2 = 580.39;
			float jorl1 = 667.93;
			float jorl2 = 623.27;
			float jorl5 = 680.3;
			float jorl6 = 631.12;
			float jorl10 = 0.01; // SEM
			float jorl14 = 508.69;
			float medn = ((((red * 3) + (nat * 4) + (hum * 2) + (lin * 3) + (mat * 2)) / 14));
			float med = 778.03;
			float meda1 = 717.65;
			float meda2 = 735.79;
			float medl1 = 766.38;
			float medl2 = 734.75;
			float medl5 = 754.66;
			float medl6 = 734.3;
			float medl10 = 694.65;
			float medl14 = 720.16;
			float nutn = ((((red * 2) + (nat * 4) + (hum * 2) + (lin * 3) + (mat * 3)) / 14));
			float nut = 678.11;
			float nuta1 = 535.08;
			float nuta2 = 596.8;
			float nutl1 = 677.1;
			float nutl2 = 637.05;
			float nutl5 = 705.15;
			float nutl6 = 659.38;
			float nutl10 = 521.12;
			float nutl14 = 493.2;
			float pedn = (((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12));
			float ped = 593.9;
			float peda1 = 444.5;
			float peda2 = 531.91;
			float pedl1 = 573.66;
			float pedl2 = 573.57;
			float pedl5 = 587.17;
			float pedl6 = 586.12;
			float pedl10 = 504.55;
			float pedl14 = 506.52;
			float tean = (((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12));
			float tea = 573.87;
			float teaa1 = 529.95;
			float teaa2 = 508.48;
			float teal1 = 586.9;
			float teal2 = 555.39;
			float teal5 = 620.5;
			float teal6 = 566.7;
			float teal10 = 464.03;
			float teal14 = 0.01; // SEM
			while (red >= 400 and admn >= adm) {
				cout << "Administração " << endl;
				break;
			}
			while (red >= 400 and admn >= adml1 and ren >= 2 and esc >= 2) {
				cout << "Administração para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and admn >= adml2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Administração para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and admn >= adml5 and esc >= 2) {
				cout << "Administração para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and admn >= adml6 and cor >= 2 and esc >= 2) {
				cout << "Administração para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and admn >= adml10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Administração para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and admn >= adml14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Administração para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and admn >= adma1 and ind >= 2) {
				cout << "Administração para candidato indígena" << endl;
				break;
			}
			while (red >= 400 and admn >= adma2 and qui >= 2) {
				cout << "Administração para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and arqn >= arq) {
				cout << "Arquitetura " << endl;
				break;
			}
			while (red >= 300 and arqn >= arql2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Arquitetura para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and arqn >= arql6 and cor >= 2 and esc >= 2) {
				cout << "Arquitetura para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and arqn >= arql10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Arquitetura para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and arqn >= arql14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Arquitetura para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and arqn >= arqa1 and ind >= 2) {
				cout << "Arquitetura para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and arqn >= arqa2 and qui >= 2) {
				cout << "Arquitetura para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and comn >= com) {
				cout << "Ciência da Computação " << endl;
				break;
			}
			while (red >= 300 and comn >= coml1 and ren >= 2 and esc >= 2) {
				cout << "Ciência da Computação para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and comn >= coml2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Ciência da Computação para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and comn >= coml5 and esc >= 2) {
				cout << "Ciência da Computação para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and comn >= coml6 and cor >= 2 and esc >= 2) {
				cout << "Ciência da Computação para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and comn >= coml10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Ciência da Computação para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and comn >= coml14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Ciência da Computação para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and comn >= coma1 and ind >= 2) {
				cout << "Ciência da Computação para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and comn >= coma2 and qui >= 2) {
				cout << "Ciência da Computação para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and conn >= con) {
				cout << "Ciências Contábeis " << endl;
				break;
			}
			while (red >= 300 and conn >= conl1 and ren >= 2 and esc >= 2) {
				cout << "Ciências Contábeis para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and conn >= conl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Ciências Contábeis para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and conn >= conl5 and esc >= 2) {
				cout << "Ciências Contábeis para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and conn >= conl6 and cor >= 2 and esc >= 2) {
				cout << "Ciências Contábeis para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and conn >= conl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Ciências Contábeis para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and conn >= conl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Ciências Contábeis para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and conn >= cona1 and ind >= 2) {
				cout << "Ciências Contábeis para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and conn >= cona2 and qui >= 2) {
				cout << "Ciências Contábeis para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and econ >= eco) {
				cout << "Ciências Econômicas " << endl;
				break;
			}
			while (red >= 300 and econ >= ecol1 and ren >= 2 and esc >= 2) {
				cout << "Ciências Econômicas para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and econ >= ecol2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Ciências Econômicas para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and econ >= ecol5 and esc >= 2) {
				cout << "Ciências Econômicas para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and econ >= ecol6 and cor >= 2 and esc >= 2) {
				cout << "Ciências Econômicas para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and econ >= ecol10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Ciências Econômicas para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and econ >= ecol14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Ciências Econômicas para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and econ >= ecoa1 and ind >= 2) {
				cout << "Ciências Econômicas para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and econ >= ecoa2 and qui >= 2) {
				cout << "Ciências Econômicas para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and dirn >= dir) {
				cout << "Direito " << endl;
				break;
			}
			while (red >= 300 and dirn >= dirl1 and ren >= 2 and esc >= 2) {
				cout << "Direito para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and dirn >= dirl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Direito para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and dirn >= dirl5 and esc >= 2) {
				cout << "Direito para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and dirn >= dirl6 and cor >= 2 and esc >= 2) {
				cout << "Direito para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and dirn >= dirl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Direito para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and dirn >= dirl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Direito para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and dirn >= dira1 and ind >= 2) {
				cout << "Direito para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and dirn >= dira2 and qui >= 2) {
				cout << "Direito para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and enfn >= enf) {
				cout << "Enfermagem " << endl;
				break;
			}
			while (red >= 300 and enfn >= enfl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Enfermagem para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and enfn >= enfl6 and cor >= 2 and esc >= 2) {
				cout << "Enfermagem para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and enfn >= enfl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Enfermagem para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and enfn >= enfa1 and ind >= 2) {
				cout << "Enfermagem para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and enfn >= enfa2 and qui >= 2) {
				cout << "Enfermagem para candidato quilombola" << endl;
				break;
			}
			while (red >= 450 and ambn >= amb) {
				cout << "Engenharia Ambiental " << endl;
				break;
			}
			while (red >= 450 and ambn >= ambl1 and ren >= 2 and esc >= 2) {
				cout << "Engenharia Ambiental para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 450 and ambn >= ambl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Engenharia Ambiental para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 450 and ambn >= ambl5 and esc >= 2) {
				cout << "Engenharia Ambiental para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 450 and ambn >= ambl6 and cor >= 2 and esc >= 2) {
				cout << "Engenharia Ambiental para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 450 and ambn >= ambl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Engenharia Ambiental para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 450 and ambn >= ambl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Engenharia Ambiental para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 450 and ambn >= amba1 and ind >= 2) {
				cout << "Engenharia Ambiental para candidato indígena" << endl;
				break;
			}
			while (red >= 450 and ambn >= amba2 and qui >= 2) {
				cout << "Engenharia Ambiental para candidato quilombola" << endl;
				break;
			}
			while (red >= 400 and civn >= civ) {
				cout << "Engenharia Civil " << endl;
				break;
			}
			while (red >= 400 and civn >= civl1 and ren >= 2 and esc >= 2) {
				cout << "Engenharia Civil para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and civn >= civl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Engenharia Civil para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and civn >= civl5 and esc >= 2) {
				cout << "Engenharia Civil para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and civn >= civl6 and cor >= 2 and esc >= 2) {
				cout << "Engenharia Civil para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and civn >= civl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Engenharia Civil para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and civn >= civl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Engenharia Civil para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and civn >= civa1 and ind >= 2) {
				cout << "Engenharia Civil para candidato indígena" << endl;
				break;
			}
			while (red >= 400 and civn >= civa2 and qui >= 2) {
				cout << "Engenharia Civil para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and alin >= ali) {
				cout << "Engenharia de Alimentos " << endl;
				break;
			}
			while (red >= 300 and alin >= alil1 and ren >= 2 and esc >= 2) {
				cout << "Engenharia de Alimentos para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and alin >= alil2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Engenharia de Alimentos para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and alin >= alil5 and esc >= 2) {
				cout << "Engenharia de Alimentos para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and alin >= alil6 and cor >= 2 and esc >= 2) {
				cout << "Engenharia de Alimentos para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and alin >= alil10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Engenharia de Alimentos para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and alin >= alil14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Engenharia de Alimentos para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and alin >= alia1 and ind >= 2) {
				cout << "Engenharia de Alimentos para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and alin >= alia2 and qui >= 2) {
				cout << "Engenharia de Alimentos para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and elen >= ele) {
				cout << "Engenharia Elétrica " << endl;
				break;
			}
			while (red >= 300 and elen >= elel1 and ren >= 2 and esc >= 2) {
				cout << "Engenharia Elétrica para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and elen >= elel2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Engenharia Elétrica para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and elen >= elel5 and esc >= 2) {
				cout << "Engenharia Elétrica para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and elen >= elel6 and cor >= 2 and esc >= 2) {
				cout << "Engenharia Elétrica para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and elen >= elel10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Engenharia Elétrica para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and elen >= elel14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Engenharia Elétrica para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and elen >= elea1 and ind >= 2) {
				cout << "Engenharia Elétrica para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and elen >= elea2 and qui >= 2) {
				cout << "Engenharia Elétrica para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and filn >= fil) {
				cout << "Filosofia " << endl;
				break;
			}
			while (red >= 300 and filn >= fill1 and ren >= 2 and esc >= 2) {
				cout << "Filosofia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and filn >= fill2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Filosofia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and filn >= fill5 and esc >= 2) {
				cout << "Filosofia para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and filn >= fill6 and cor >= 2 and esc >= 2) {
				cout << "Filosofia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and filn >= fill10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Filosofia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and filn >= fill14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Filosofia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and filn >= fila1 and ind >= 2) {
				cout << "Filosofia para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and filn >= fila2 and qui >= 2) {
				cout << "Filosofia para candidato quilombola" << endl;
				break;
			}
			while (red >= 400 and jorn >= jor) {
				cout << "Jornalismo " << endl;
				break;
			}
			while (red >= 400 and jorn >= jorl1 and ren >= 2 and esc >= 2) {
				cout << "Jornalismo para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and jorn >= jorl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Jornalismo para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and jorn >= jorl5 and esc >= 2) {
				cout << "Jornalismo para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and jorn >= jorl6 and cor >= 2 and esc >= 2) {
				cout << "Jornalismo para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and jorn >= jorl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Jornalismo para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and jorn >= jorl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Jornalismo para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and jorn >= jora1 and ind >= 2) {
				cout << "Jornalismo para candidato indígena" << endl;
				break;
			}
			while (red >= 400 and jorn >= jora2 and qui >= 2) {
				cout << "Jornalismo para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and medn >= med) {
				cout << "Medicina " << endl;
				break;
			}
			while (red >= 300 and medn >= medl1 and ren >= 2 and esc >= 2) {
				cout << "Medicina para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and medn >= medl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Medicina para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and medn >= medl5 and esc >= 2) {
				cout << "Medicina para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and medn >= medl6 and cor >= 2 and esc >= 2) {
				cout << "Medicina para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and medn >= medl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Medicina para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and medn >= medl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Medicina para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and medn >= meda1 and ind >= 2) {
				cout << "Medicina para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and medn >= meda2 and qui >= 2) {
				cout << "Medicina para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and nutn >= nut) {
				cout << "Nutrição " << endl;
				break;
			}
			while (red >= 300 and nutn >= nutl1 and ren >= 2 and esc >= 2) {
				cout << "Nutrição para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and nutn >= nutl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Nutrição para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and nutn >= nutl5 and esc >= 2) {
				cout << "Nutrição para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and nutn >= nutl6 and cor >= 2 and esc >= 2) {
				cout << "Nutrição para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and nutn >= nutl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Nutrição para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and nutn >= nutl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Nutrição para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and nutn >= nuta1 and ind >= 2) {
				cout << "Nutrição para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and nutn >= nuta2 and qui >= 2) {
				cout << "Nutrição para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and pedn >= ped) {
				cout << "Pedagogia " << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl1 and ren >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl5 and esc >= 2) {
				cout << "Pedagogia para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl6 and cor >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= peda1 and ind >= 2) {
				cout << "Pedagogia para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and pedn >= peda2 and qui >= 2) {
				cout << "Pedagogia para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and tean >= tea) {
				cout << "Teatro " << endl;
				break;
			}
			while (red >= 300 and tean >= teal1 and ren >= 2 and esc >= 2) {
				cout << "Teatro para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and tean >= teal2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Teatro para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and tean >= teal5 and esc >= 2) {
				cout << "Teatro para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and tean >= teal6 and cor >= 2 and esc >= 2) {
				cout << "Teatro para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and tean >= teal10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Teatro para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and tean >= teal14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Teatro para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and tean >= teaa1 and ind >= 2) {
				cout << "Teatro para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and tean >= teaa2 and qui >= 2) {
				cout << "Teatro para candidato quilombola" << endl;
				break;
			}
		}
		cout << " " << endl;
		{
			cout << "Universidade Federal do Tocantins, Campus Araguaína (CIMBA):" << endl << " " << endl;
			float letn = ((red + nat + hum + lin + mat) / 5);
			float let = 614.33;
			float leta1 = 453.27;
			float leta2 = 544.71;
			float letl1 = 602.65;
			float letl2 = 598.33;
			float letl5 = 606.85;
			float letl6 = 597.25;
			float letl10 = 524.69;
			float letl14 = 467.75;
			float bion = ((red + (nat * 4) + (hum * 2) + (lin * 4) + (mat * 2)) / 13);
			float bio = 617.28;
			float bioa1 = 483.11;
			float bioa2 = 571.5;
			float biol1 = 607.74;
			float biol2 = 603.87;
			float biol5 = 620.41;
			float biol6 = 612.68;
			float biol10 = 492.67;
			float biol14 = 560.57;
			float fisn = ((red + (nat * 3) + hum + (lin * 2.5) + (mat * 3)) / 10.5);
			float fis = 619.5;
			float fisa1 = 424.46;
			float fisa2 = 548.22;
			float fisl1 = 574.67;
			float fisl2 = 620.68;
			float fisl5 = 581.59;
			float fisl6 = 591.08;
			float fisl10 = 0.01; // SEM
			float fisl14 = 0.01; // SEM
			float geon = ((red + nat + (hum * 3) + (lin * 2) + mat) / 8);
			float geo = 579.52;
			float geoa1 = 481.7;
			float geoa2 = 544.84;
			float geol1 = 598.3;
			float geol2 = 584.33;
			float geol5 = 571.3;
			float geol6 = 567.48;
			float geol10 = 523.42;
			float geol14 = 0.01; // SEM
			float coon = ((red + nat + (hum * 2) + (lin * 2) + mat) / 7);
			float coo = 555.56;
			float cooa1 = 401.46;
			float cooa2 = 419.82;
			float cool1 = 560.45;
			float cool2 = 551.1;
			float cool5 = 562.02;
			float cool6 = 584.96;
			float cool10 = 446.73;
			float cool14 = 0.01; // SEM
			float turn = ((red + nat + (hum * 2) + (lin * 2) + mat) / 7);
			float tur = 567.49;
			float tura1 = 476.19;
			float tura2 = 506.13;
			float turl1 = 560.45;
			float turl2 = 544.6;
			float turl5 = 544.68;
			float turl6 = 544.68;
			float turl10 = 0.01; // SEM
			float turl14 = 0.01; // SEM
			float hisn = ((red + nat + (hum * 3) + (lin * 2) + mat) / 8);
			float his = 598.52;
			float hisa1 = 482.12;
			float hisa2 = 597.77;
			float hisl1 = 613.73;
			float hisl2 = 597.27;
			float hisl5 = 608.8;
			float hisl6 = 573;
			float hisl10 = 512.1;
			float hisl14 = 536.58;
			float logn = (((red * 2) + nat + (hum * 2) + (lin * 4) + (mat * 4)) / 13);
			float log = 605.97;
			float loga1 = 523.04;
			float loga2 = 528.08;
			float logl1 = 584.13;
			float logl2 = 580.09;
			float logl5 = 585.94;
			float logl6 = 578.77;
			float logl10 = 485.63;
			float logl14 = 483.87;
			float maten = ((red + nat + hum + lin + mat) / 5);
			float mate = 609.93;
			float matea1 = 484.65;
			float matea2 = 527.81;
			float matel1 = 672.39;
			float matel2 = 617.59;
			float matel5 = 600.01;
			float matel6 = 597.87;
			float matel10 = 0.01; // SEM
			float matel14 = 0.01; // SEM
			float quimn = ((red + (nat * 4) + hum + (lin * 4) + (mat * 3)) / 13);
			float quim = 594.72;
			float quima1 = 385.83;
			float quima2 = 508.97;
			float quiml1 = 640.98;
			float quiml2 = 576.61;
			float quiml5 = 577.37;
			float quiml6 = 568.07;
			float quiml10 = 610.51;
			float quiml14 = 0.01; // SEM
			while (red >= 300 and letn >= let) {
				cout << "Letras (Língua Portuguesa) " << endl;
				break;
			}
			while (red >= 300 and letn >= letl1 and ren >= 2 and esc >= 2) {
				cout << "Letras (Língua Portuguesa) para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and letn >= letl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Letras (Língua Portuguesa) para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and letn >= letl5 and esc >= 2) {
				cout << "Letras (Língua Portuguesa) para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and letn >= letl6 and cor >= 2 and esc >= 2) {
				cout << "Letras (Língua Portuguesa) para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and letn >= letl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Letras (Língua Portuguesa) para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and letn >= letl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Letras (Língua Portuguesa) para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and letn >= leta1 and ind >= 2) {
				cout << "Letras (Língua Portuguesa) para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and letn >= leta2 and qui >= 2) {
				cout << "Letras (Língua Portuguesa) para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and bion >= bio) {
				cout << "Biologia " << endl;
				break;
			}
			while (red >= 300 and bion >= biol1 and ren >= 2 and esc >= 2) {
				cout << "Biologia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Biologia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol5 and esc >= 2) {
				cout << "Biologia para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol6 and cor >= 2 and esc >= 2) {
				cout << "Biologia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Biologia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Biologia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= bioa1 and ind >= 2) {
				cout << "Biologia para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and bion >= bioa2 and qui >= 2) {
				cout << "Biologia para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and fisn >= fis) {
				cout << "Física " << endl;
				break;
			}
			while (red >= 300 and fisn >= fisl1 and ren >= 2 and esc >= 2) {
				cout << "Física para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and fisn >= fisl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Física para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and fisn >= fisl5 and esc >= 2) {
				cout << "Física para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and fisn >= fisl6 and cor >= 2 and esc >= 2) {
				cout << "Física para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and fisn >= fisl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Física para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and fisn >= fisl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Física para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and fisn >= fisa1 and ind >= 2) {
				cout << "Física para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and fisn >= fisa2 and qui >= 2) {
				cout << "Física para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and geon >= geo) {
				cout << "Geografia " << endl;
				break;
			}
			while (red >= 300 and geon >= geol1 and ren >= 2 and esc >= 2) {
				cout << "Geografia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and geon >= geol2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Geografia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and geon >= geol5 and esc >= 2) {
				cout << "Geografia para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and geon >= geol6 and cor >= 2 and esc >= 2) {
				cout << "Geografia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and geon >= geol10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Geografia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and geon >= geol14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Geografia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and geon >= geoa1 and ind >= 2) {
				cout << "Geografia para candidato indígena" << endl;
				break;
			}
			while (red >= 400 and geon >= geoa2 and qui >= 2) {
				cout << "Geografia para candidato quilombola" << endl;
				break;
			}
			while (red >= 0.01 and coon >= coo) {
				cout << "Gestão de Cooperativas " << endl;
				break;
			}
			while (red >= 0.01 and coon >= cool1 and ren >= 2 and esc >= 2) {
				cout << "Gestão de Cooperativas para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 0.01 and coon >= cool2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Gestão de Cooperativas para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 0.01 and coon >= cool5 and esc >= 2) {
				cout << "Gestão de Cooperativas para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 0.01 and coon >= cool6 and cor >= 2 and esc >= 2) {
				cout << "Gestão de Cooperativas para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 0.01 and coon >= cool10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Gestão de Cooperativas para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 0.01 and coon >= cool14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Gestão de Cooperativas para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 0.01 and coon >= cooa1 and ind >= 2) {
				cout << "Gestão de Cooperativas para candidato indígena" << endl;
				break;
			}
			while (red >= 0.01 and coon >= cooa2 and qui >= 2) {
				cout << "Gestão de Cooperativas para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and turn >= tur) {
				cout << "Gestão de Turismo " << endl;
				break;
			}
			while (red >= 300 and turn >= turl1 and ren >= 2 and esc >= 2) {
				cout << "Gestão de Turismo para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and turn >= turl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Gestão de Turismo para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and turn >= turl5 and esc >= 2) {
				cout << "Gestão de Turismo para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and turn >= turl6 and cor >= 2 and esc >= 2) {
				cout << "Gestão de Turismo para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and turn >= turl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Gestão de Turismo para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and turn >= turl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Gestão de Turismo para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and turn >= tura1 and ind >= 2) {
				cout << "Gestão de Turismo para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and turn >= tura2 and qui >= 2) {
				cout << "Gestão de Turismo para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and hisn >= his) {
				cout << "História " << endl;
				break;
			}
			while (red >= 300 and hisn >= hisl1 and ren >= 2 and esc >= 2) {
				cout << "História para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and hisn >= hisl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "História para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and hisn >= hisl5 and esc >= 2) {
				cout << "História para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and hisn >= hisl6 and cor >= 2 and esc >= 2) {
				cout << "História para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and hisn >= hisl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "História para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and hisn >= hisl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "História para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and hisn >= hisa1 and ind >= 2) {
				cout << "História para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and hisn >= hisa2 and qui >= 2) {
				cout << "História para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and logn >= log) {
				cout << "Logística " << endl;
				break;
			}
			while (red >= 300 and logn >= logl1 and ren >= 2 and esc >= 2) {
				cout << "Logística para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and logn >= logl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Logística para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and logn >= logl5 and esc >= 2) {
				cout << "Logística para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and logn >= logl6 and cor >= 2 and esc >= 2) {
				cout << "Logística para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and logn >= logl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Logística para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and logn >= logl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Logística para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and logn >= loga1 and ind >= 2) {
				cout << "Logística para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and logn >= loga2 and qui >= 2) {
				cout << "Logística para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and maten >= mate) {
				cout << "Matemática " << endl;
				break;
			}
			while (red >= 300 and maten >= matel1 and ren >= 2 and esc >= 2) {
				cout << "Matemática para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and maten >= matel2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Matemática para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and maten >= matel5 and esc >= 2) {
				cout << "Matemática para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and maten >= matel6 and cor >= 2 and esc >= 2) {
				cout << "Matemática para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and maten >= matel10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Matemática para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and maten >= matel14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Matemática para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and maten >= matea1 and ind >= 2) {
				cout << "Matemática para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and maten >= matea2 and qui >= 2) {
				cout << "Matemática para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and quimn >= quim) {
				cout << "Química " << endl;
				break;
			}
			while (red >= 300 and quimn >= quiml1 and ren >= 2 and esc >= 2) {
				cout << "Química para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and quimn >= quiml2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Química para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and quimn >= quiml5 and esc >= 2) {
				cout << "Química para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and quimn >= quiml6 and cor >= 2 and esc >= 2) {
				cout << "Química para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and quimn >= quiml10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Química para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and quimn >= quiml14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Química para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and quimn >= quima1 and ind >= 2) {
				cout << "Química para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and quimn >= quima2 and qui >= 2) {
				cout << "Química para candidato quilombola" << endl;
				break;
			}
		}
		cout << " " << endl;
		{
			cout << "Universidade Federal do Tocantins, Campus Araguaína (EMVZ):" << endl << " " << endl;
			float medn = (((red * 3) + (nat * 4) + (hum * 2) + (lin * 3) + (mat * 2)) / 14);
			float med = 770.12;
			float meda1 = 737.98;
			float meda2 = 733.78;
			float medl1 = 739.59;
			float medl2 = 734.75;
			float medl5 = 757.1;
			float medl6 = 711.18;
			float medl10 = 678.77;
			float medl14 = 671.15;
			float vetn = ((red + (nat * 4) + hum + (lin * 4) + (mat * 3)) / 13);
			float vet = 666.38;
			float veta1 = 536.8;
			float veta2 = 625.61;
			float vetl1 = 634.67;
			float vetl2 = 631.23;
			float vetl5 = 674.54;
			float vetl6 = 632.28;
			float vetl10 = 545.16;
			float vetl14 = 585.24;
			float zoon = ((red + (nat * 4) + hum + (lin * 3) + (mat * 4)) / 13);
			float zoo = 611.79;
			float zooa1 = 449.41;
			float zooa2 = 550.68;
			float zool1 = 602.78;
			float zool2 = 589.01;
			float zool5 = 602.54;
			float zool6 = 582.82;
			float zool10 = 617.69;
			float zool14 = 516.42;
			while (red >= 300 and medn >= med) {
				cout << "Medicina " << endl;
				break;
			}
			while (red >= 300 and medn >= medl1 and ren >= 2 and esc >= 2) {
				cout << "Medicina para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and medn >= medl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Medicina para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and medn >= medl5 and esc >= 2) {
				cout << "Medicina para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and medn >= medl6 and cor >= 2 and esc >= 2) {
				cout << "Medicina para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and medn >= medl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Medicina para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and medn >= medl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Medicina para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and medn >= meda1 and ind >= 2) {
				cout << "Medicina para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and medn >= meda2 and qui >= 2) {
				cout << "Medicina para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and vetn >= vet) {
				cout << "Medicina Veterinária " << endl;
				break;
			}
			while (red >= 300 and vetn >= vetl1 and ren >= 2 and esc >= 2) {
				cout << "Medicina Veterinária para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and vetn >= vetl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Medicina Veterinária para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and vetn >= vetl5 and esc >= 2) {
				cout << "Medicina Veterinária para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and vetn >= vetl6 and cor >= 2 and esc >= 2) {
				cout << "Medicina Veterinária para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and vetn >= vetl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Medicina Veterinária para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and vetn >= vetl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Medicina Veterinária para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and vetn >= veta1 and ind >= 2) {
				cout << "Medicina Veterinária para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and vetn >= veta2 and qui >= 2) {
				cout << "Medicina Veterinária para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and zoon >= zoo) {
				cout << "Zootecnia " << endl;
				break;
			}
			while (red >= 300 and zoon >= zool1 and ren >= 2 and esc >= 2) {
				cout << "Zootecnia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and zoon >= zool2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Zootecnia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and zoon >= zool5 and esc >= 2) {
				cout << "Zootecnia para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and zoon >= zool6 and cor >= 2 and esc >= 2) {
				cout << "Zootecnia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and zoon >= zool10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Zootecnia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and zoon >= zool14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Zootecnia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and zoon >= zooa1 and ind >= 2) {
				cout << "Zootecnia para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and zoon >= zooa2 and qui >= 2) {
				cout << "Zootecnia para candidato quilombola" << endl;
				break;
			}
		}
		cout << " " << endl;
		{
			cout << "Universidade Federal do Tocantins, Campus Porto Nacional:" << endl << " " << endl;
			float letn = ((red + nat + hum + lin + mat) / 5);
			float let = 606.21;
			float leta1 = 478.57;
			float leta2 = 544.83;
			float letl1 = 550.11;
			float letl2 = 565.75;
			float letl5 = 633.09;
			float letl6 = 560.59;
			float letl10 = 0.01; // SEM
			float letl14 = 0.01; // SEM
			float bion = (((red * 2) + nat + hum + (lin * 2) + mat) / 7);
			float bio = 633.72;
			float bioa1 = 0.01; // SEM
			float bioa2 = 559.09;
			float biol1 = 655.82;
			float biol2 = 651.08;
			float biol5 = 621.08;
			float biol6 = 609.8;
			float biol10 = 414.98;
			float biol14 = 0.01; // SEM
			float socn = ((red + nat + (hum * 4) + (lin * 2) + mat) / 9);
			float soc = 563.31;
			float soca1 = 0.01; // SEM
			float soca2 = 545.08;
			float socl1 = 596.96;
			float socl2 = 571.46;
			float socl5 = 632.6;
			float socl6 = 549.41;
			float socl10 = 387.27;
			float socl14 = 0.01; // SEM
			float geon = ((red + nat + hum + lin + mat) / 5);
			float geo = 568.53;
			float geoa1 = 481.61;
			float geoa2 = 550.13;
			float geol1 = 453.25;
			float geol2 = 554.71;
			float geol5 = 557.13;
			float geol6 = 539.35;
			float geol10 = 0.01; // SEM
			float geol14 = 0.01; // SEM
			float hisn = ((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12);
			float his = 596.92;
			float hisa1 = 470.52;
			float hisa2 = 555.87;
			float hisl1 = 584.62;
			float hisl2 = 569.38;
			float hisl5 = 605.07;
			float hisl6 = 580.27;
			float hisl10 = 0.01; // SEM
			float hisl14 = 0.01; // SEM
			float reln = (((red * 3) + nat + (hum * 4) + (lin * 3) + mat) / 12);
			float rel = 696.59;
			float rela1 = 434.29;
			float rela2 = 588.89;
			float rell1 = 689.36;
			float rell2 = 631.54;
			float rell5 = 698.47;
			float rell6 = 643.15;
			float rell10 = 456.07;
			float rell14 = 0.01; // SEM
			while (red >= 300 and letn >= let) {
				cout << "Letras (Língua Portuguesa ou Inglesa) " << endl;
				break;
			}
			while (red >= 300 and letn >= letl1 and ren >= 2 and esc >= 2) {
				cout << "Letras (Língua Portuguesa ou Inglesa) para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and letn >= letl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Letras (Língua Portuguesa ou Inglesa) para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and letn >= letl5 and esc >= 2) {
				cout << "Letras (Língua Portuguesa ou Inglesa) para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and letn >= letl6 and cor >= 2 and esc >= 2) {
				cout << "Letras (Língua Portuguesa ou Inglesa) para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and letn >= letl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Letras (Língua Portuguesa ou Inglesa) para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and letn >= letl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Letras (Língua Portuguesa ou Inglesa) para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and letn >= leta1 and ind >= 2) {
				cout << "Letras (Língua Portuguesa ou Inglesa) para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and letn >= leta2 and qui >= 2) {
				cout << "Letras (Língua Portuguesa ou Inglesa) para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and bion >= bio) {
				cout << "Ciências Biológicas " << endl;
				break;
			}
			while (red >= 300 and bion >= biol1 and ren >= 2 and esc >= 2) {
				cout << "Ciências Biológicas para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Ciências Biológicas para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol5 and esc >= 2) {
				cout << "Ciências Biológicas para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol6 and cor >= 2 and esc >= 2) {
				cout << "Ciências Biológicas para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Ciências Biológicas para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Ciências Biológicas para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= bioa1 and ind >= 2) {
				cout << "Ciências Biológicas para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and bion >= bioa2 and qui >= 2) {
				cout << "Ciências Biológicas para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and socn >= soc) {
				cout << "Ciências Sociais " << endl;
				break;
			}
			while (red >= 300 and socn >= socl1 and ren >= 2 and esc >= 2) {
				cout << "Ciências Sociais para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and socn >= socl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Ciências Sociais para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and socn >= socl5 and esc >= 2) {
				cout << "Ciências Sociais para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and socn >= socl6 and cor >= 2 and esc >= 2) {
				cout << "Ciências Sociais para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and socn >= socl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Ciências Sociais para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and socn >= socl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Ciências Sociais para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and socn >= soca1 and ind >= 2) {
				cout << "Ciências Sociais para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and socn >= soca2 and qui >= 2) {
				cout << "Ciências Sociais para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and geon >= geo) {
				cout << "Geografia " << endl;
				break;
			}
			while (red >= 300 and geon >= geol1 and ren >= 2 and esc >= 2) {
				cout << "Geografia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and geon >= geol2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Geografia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and geon >= geol5 and esc >= 2) {
				cout << "Geografia para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and geon >= geol6 and cor >= 2 and esc >= 2) {
				cout << "Geografia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and geon >= geol10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Geografia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and geon >= geol14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Geografia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and geon >= geoa1 and ind >= 2) {
				cout << "Geografia para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and geon >= geoa2 and qui >= 2) {
				cout << "Geografia para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and hisn >= his) {
				cout << "História " << endl;
				break;
			}
			while (red >= 300 and hisn >= hisl1 and ren >= 2 and esc >= 2) {
				cout << "História para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and hisn >= hisl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "História para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and hisn >= hisl5 and esc >= 2) {
				cout << "História para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and hisn >= hisl6 and cor >= 2 and esc >= 2) {
				cout << "História para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and hisn >= hisl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "História para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and hisn >= hisl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "História para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and hisn >= hisa1 and ind >= 2) {
				cout << "História para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and hisn >= hisa2 and qui >= 2) {
				cout << "História para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and reln >= rel) {
				cout << "Relações Internacionais " << endl;
				break;
			}
			while (red >= 300 and reln >= rell1 and ren >= 2 and esc >= 2) {
				cout << "Relações Internacionais para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and reln >= rell2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Relações Internacionais para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and reln >= rell5 and esc >= 2) {
				cout << "Relações Internacionais para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and reln >= rell6 and cor >= 2 and esc >= 2) {
				cout << "Relações Internacionais para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and reln >= rell10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Relações Internacionais para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and reln >= rell14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Relações Internacionais para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and reln >= rela1 and ind >= 2) {
				cout << "Relações Internacionais para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and reln >= rela2 and qui >= 2) {
				cout << "Relações Internacionais para candidato quilombola" << endl;
				break;
			}
		}
		cout << " " << endl;
		{
			cout << "Universidade Federal do Tocantins, Campus Gurupi:" << endl << " " << endl;
			float agrn = ((red + (nat * 4) + hum + (lin * 4) + (mat * 3)) / 13);
			float agr = 615.31;
			float agra1 = 515.44;
			float agra2 = 568.64;
			float agrl1 = 602.22;
			float agrl2 = 584.34;
			float agrl5 = 621.33;
			float agrl6 = 603.58;
			float agrl10 = 530.34;
			float agrl14 = 0.01; // SEM
			float bion = ((red + (nat * 3) + hum + (lin * 4) + (mat * 4)) / 13);
			float bio = 632.71;
			float bioa1 = 456.74;
			float bioa2 = 527.11;
			float biol1 = 602.6;
			float biol2 = 586.19;
			float biol5 = 600.18;
			float biol6 = 555.45;
			float biol10 = 0.01; // SEM
			float biol14 = 0.01; // SEM
			float flon = ((red + (nat * 4) + hum + (lin * 3) + (mat * 4)) / 13);
			float flo = 589.3;
			float floa1 = 429.04;
			float floa2 = 460.06;
			float flol1 = 608.35;
			float flol2 = 548.79;
			float flol5 = 572.01;
			float flol6 = 591.95;
			float flol10 = 0.01; // SEM
			float flol14 = 0.01; // SEM
			float quimn = ((red + (nat * 4) + hum + (lin * 4) + (mat * 3)) / 13);
			float quim = 562.77;
			float quima1 = 404.25;
			float quima2 = 459.56;
			float quiml1 = 533.29;
			float quiml2 = 544.48;
			float quiml5 = 600.67;
			float quiml6 = 510.96;
			float quiml10 = 0.01; // SEM
			float quiml14 = 0.01; // SEM
			while (red >= 300 and agrn >= agr) {
				cout << "Agronomia " << endl;
				break;
			}
			while (red >= 300 and agrn >= agrl1 and ren >= 2 and esc >= 2) {
				cout << "Agronomia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and agrn >= agrl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Agronomia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and agrn >= agrl5 and esc >= 2) {
				cout << "Agronomia para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and agrn >= agrl6 and cor >= 2 and esc >= 2) {
				cout << "Agronomia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and agrn >= agrl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Agronomia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and agrn >= agrl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Agronomia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and agrn >= agra1 and ind >= 2) {
				cout << "Agronomia para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and agrn >= agra2 and qui >= 2) {
				cout << "Agronomia para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and bion >= bio) {
				cout << "Engenharia de Bioprocessos e Biotecnologia " << endl;
				break;
			}
			while (red >= 300 and bion >= biol1 and ren >= 2 and esc >= 2) {
				cout << "Engenharia de Bioprocessos e Biotecnologia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Engenharia de Bioprocessos e Biotecnologia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol5 and esc >= 2) {
				cout << "Engenharia de Bioprocessos e Biotecnologia para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol6 and cor >= 2 and esc >= 2) {
				cout << "Engenharia de Bioprocessos e Biotecnologia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Engenharia de Bioprocessos e Biotecnologia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= biol14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Engenharia de Bioprocessos e Biotecnologia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and bion >= bioa1 and ind >= 2) {
				cout << "Engenharia de Bioprocessos e Biotecnologia para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and bion >= bioa2 and qui >= 2) {
				cout << "Engenharia de Bioprocessos e Biotecnologia para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and flon >= flo) {
				cout << "Engenharia Florestal " << endl;
				break;
			}
			while (red >= 300 and flon >= flol1 and ren >= 2 and esc >= 2) {
				cout << "Engenharia Florestal para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and flon >= flol2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Engenharia Florestal para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and flon >= flol5 and esc >= 2) {
				cout << "Engenharia Florestal para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and flon >= flol6 and cor >= 2 and esc >= 2) {
				cout << "Engenharia Florestal para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and flon >= flol10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Engenharia Florestal para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and flon >= flol14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Engenharia Florestal para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and flon >= floa1 and ind >= 2) {
				cout << "Engenharia Florestal para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and flon >= floa2 and qui >= 2) {
				cout << "Engenharia Florestal para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and quimn >= quim) {
				cout << "Química Ambiental " << endl;
				break;
			}
			while (red >= 300 and quimn >= quiml1 and ren >= 2 and esc >= 2) {
				cout << "Química Ambiental para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and quimn >= quiml2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Química Ambiental para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and quimn >= quiml5 and esc >= 2) {
				cout << "Química Ambiental para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and quimn >= quiml6 and cor >= 2 and esc >= 2) {
				cout << "Química Ambiental para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and quimn >= quiml10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Química Ambiental para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and quimn >= quiml14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Química Ambiental para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and quimn >= quima1 and ind >= 2) {
				cout << "Química Ambiental para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and quimn >= quima2 and qui >= 2) {
				cout << "Química Ambiental para candidato quilombola" << endl;
				break;
			}
		}
		cout << " " << endl;
		{
			cout << "Universidade Federal do Tocantins, Campus Miracema:" << endl << " " << endl;
			float edfn = ((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12);
			float edf = 574.02;
			float edfa1 = 445.94;
			float edfa2 = 521.02;
			float edfl1 = 564.08;
			float edfl2 = 547.32;
			float edfl5 = 559.8;
			float edfl6 = 523.23;
			float edfl10 = 0.01; // SEM
			float edfl14 = 0.01; // SEM
			float pedn = ((red + nat + hum + lin + mat) / 5);
			float ped = 553.97;
			float peda1 = 416.51;
			float peda2 = 448.71;
			float pedl1 = 558.71;
			float pedl2 = 574.41;
			float pedl5 = 569.41;
			float pedl6 = 539.45;
			float pedl10 = 0.01; // SEM
			float pedl14 = 0.01; // SEM
			float psin = ((red + (nat * 4) + hum + (lin * 4) + (mat * 3)) / 13);
			float psi = 663.06;
			float psia1 = 536.8;
			float psia2 = 536.84;
			float psil1 = 646.15;
			float psil2 = 617.47;
			float psil5 = 670.61;
			float psil6 = 621.57;
			float psil10 = 524.92;
			float psil14 = 551.75;
			float sern = ((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12);
			float ser = 557.22;
			float sera1 = 431.6;
			float sera2 = 482.67;
			float serl1 = 540.82;
			float serl2 = 536.84;
			float serl5 = 555.04;
			float serl6 = 543.98;
			float serl10 = 537.87;
			float serl14 = 0.01; // SEM
			while (red >= 300 and edfn >= edf) {
				cout << "Educação Física " << endl;
				break;
			}
			while (red >= 300 and edfn >= edfl1 and ren >= 2 and esc >= 2) {
				cout << "Educação Física para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and edfn >= edfl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Educação Física para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and edfn >= edfl5 and esc >= 2) {
				cout << "Educação Física para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and edfn >= edfl6 and cor >= 2 and esc >= 2) {
				cout << "Educação Física para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and edfn >= edfl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Educação Física para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and edfn >= edfl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Educação Física para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and edfn >= edfa1 and ind >= 2) {
				cout << "Educação Física para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and edfn >= edfa2 and qui >= 2) {
				cout << "Educação Física para candidato quilombola" << endl;
				break;
			}
			while (red >= 200 and pedn >= ped) {
				cout << "Pedagogia " << endl;
				break;
			}
			while (red >= 200 and pedn >= pedl1 and ren >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 200 and pedn >= pedl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 200 and pedn >= pedl5 and esc >= 2) {
				cout << "Pedagogia para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 200 and pedn >= pedl6 and cor >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 200 and pedn >= pedl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 200 and pedn >= pedl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 200 and pedn >= peda1 and ind >= 2) {
				cout << "Pedagogia para candidato indígena" << endl;
				break;
			}
			while (red >= 200 and pedn >= peda2 and qui >= 2) {
				cout << "Pedagogia para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and psin >= psi) {
				cout << "Psicologia " << endl;
				break;
			}
			while (red >= 300 and psin >= psil1 and ren >= 2 and esc >= 2) {
				cout << "Psicologia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and psin >= psil2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Psicologia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and psin >= psil5 and esc >= 2) {
				cout << "Psicologia para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and psin >= psil6 and cor >= 2 and esc >= 2) {
				cout << "Psicologia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and psin >= psil10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Psicologia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and psin >= psil14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Psicologia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and psin >= psia1 and ind >= 2) {
				cout << "Psicologia para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and psin >= psia2 and qui >= 2) {
				cout << "Psicologia para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and sern >= ser) {
				cout << "Serviço Social " << endl;
				break;
			}
			while (red >= 300 and sern >= serl1 and ren >= 2 and esc >= 2) {
				cout << "Serviço Social para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and sern >= serl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Serviço Social para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and sern >= serl5 and esc >= 2) {
				cout << "Serviço Social para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and sern >= serl6 and cor >= 2 and esc >= 2) {
				cout << "Serviço Social para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and sern >= serl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Serviço Social para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and sern >= serl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Serviço Social para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and sern >= sera1 and ind >= 2) {
				cout << "Serviço Social para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and sern >= sera2 and qui >= 2) {
				cout << "Serviço Social para candidato quilombola" << endl;
				break;
			}
		}
		cout << " " << endl;
		{
			cout << "Universidade Federal do Tocantins, Campus Tocantinópolis:" << endl << " " << endl;
			float socn = (((red * 3) + nat + (hum * 4) + (lin * 3) + mat) / 12);
			float soc = 582.63;
			float soca1 = 0.01; // SEM
			float soca2 = 0.01; // SEM
			float socl1 = 589.54;
			float socl2 = 581.54;
			float socl5 = 708.27;
			float socl6 = 580.61;
			float socl10 = 469.47;
			float socl14 = 0.01; // SEM
			float edfn = (((red * 2) + (nat * 3) + (hum * 3) + (lin * 4) + mat) / 13);
			float edf = 572.87;
			float edfa1 = 477.71;
			float edfa2 = 525.42;
			float edfl1 = 557.4;
			float edfl2 = 567.32;
			float edfl5 = 594.64;
			float edfl6 = 550.34;
			float edfl10 = 480.14;
			float edfl14 = 0.01; // SEM
			float pedn = ((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12);
			float ped = 565.82;
			float peda1 = 418.08;
			float peda2 = 523.68;
			float pedl1 = 555.86;
			float pedl2 = 545.71;
			float pedl5 = 573.33;
			float pedl6 = 552.04;
			float pedl10 = 0.01; // SEM
			float pedl14 = 0.01; // SEM
			while (red >= 300 and socn >= soc) {
				cout << "Ciências Sociais " << endl;
				break;
			}
			while (red >= 300 and socn >= socl1 and ren >= 2 and esc >= 2) {
				cout << "Ciências Sociais para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and socn >= socl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Ciências Sociais para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and socn >= socl5 and esc >= 2) {
				cout << "Ciências Sociais para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and socn >= socl6 and cor >= 2 and esc >= 2) {
				cout << "Ciências Sociais para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and socn >= socl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Ciências Sociais para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and socn >= socl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Ciências Sociais para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and socn >= soca1 and ind >= 2) {
				cout << "Ciências Sociais para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and socn >= soca2 and qui >= 2) {
				cout << "Ciências Sociais para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and edfn >= edf) {
				cout << "Educação Física " << endl;
				break;
			}
			while (red >= 300 and edfn >= edfl1 and ren >= 2 and esc >= 2) {
				cout << "Educação Física para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and edfn >= edfl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Educação Física para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and edfn >= edfl5 and esc >= 2) {
				cout << "Educação Física para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and edfn >= edfl6 and cor >= 2 and esc >= 2) {
				cout << "Educação Física para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and edfn >= edfl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Educação Física para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and edfn >= edfl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Educação Física para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and edfn >= edfa1 and ind >= 2) {
				cout << "Educação Física para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and edfn >= edfa2 and qui >= 2) {
				cout << "Educação Física para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and pedn >= ped) {
				cout << "Pedagogia " << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl1 and ren >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl5 and esc >= 2) {
				cout << "Pedagogia para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl6 and cor >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= peda1 and ind >= 2) {
				cout << "Pedagogia para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and pedn >= peda2 and qui >= 2) {
				cout << "Pedagogia para candidato quilombola" << endl;
				break;
			}
		}
		cout << " " << endl;
		{
			cout << "Universidade Federal do Tocantins, Campus Arraias:" << endl << " " << endl;
			float turn = (((red * 3) + (nat * 2) + (hum * 4) + (lin * 3) + mat) / 13);
			float tur = 566.6;
			float tura1 = 0.01; // SEM
			float tura2 = 486.13;
			float turl1 = 583.51;
			float turl2 = 554.33;
			float turl5 = 605.69;
			float turl6 = 548.25;
			float turl10 = 0.01; // SEM
			float turl14 = 0.01; // SEM
			while (red >= 400 and turn >= tur) {
				cout << "Turismo Patrimonial e Socioambiental " << endl;
				break;
			}
			while (red >= 400 and turn >= turl1 and ren >= 2 and esc >= 2) {
				cout << "Turismo Patrimonial e Socioambiental para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and turn >= turl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Turismo Patrimonial e Socioambiental para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and turn >= turl5 and esc >= 2) {
				cout << "Turismo Patrimonial e Socioambiental para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and turn >= turl6 and cor >= 2 and esc >= 2) {
				cout << "Turismo Patrimonial e Socioambiental para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and turn >= turl10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Turismo Patrimonial e Socioambiental para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and turn >= turl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Turismo Patrimonial e Socioambiental para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 400 and turn >= tura1 and ind >= 2) {
				cout << "Turismo Patrimonial e Socioambiental para candidato indígena" << endl;
				break;
			}
			while (red >= 400 and turn >= tura2 and qui >= 2) {
				cout << "Turismo Patrimonial e Socioambiental para candidato quilombola" << endl;
				break;
			}
		}
		cout << " " << endl;
		{
			cout << "Universidade Federal do Tocantins, Campus Arraias (Buritizinho):" << endl << " " << endl;
			float maten = ((red + nat + (hum * 2) + (lin * 4) + (mat * 4)) / 12);
			float mate = 558.54;
			float matea1 = 0.01; // SEM
			float matea2 = 572.12;
			float matel1 = 561.37;
			float matel2 = 546.17;
			float matel5 = 645.76;
			float matel6 = 538.79;
			float matel10 = 0.01; // SEM
			float matel14 = 0.01; // SEM
			float pedn = ((red + nat + (hum * 4) + (lin * 4) + (mat * 2)) / 12);
			float ped = 567.54;
			float peda1 = 406.45;
			float peda2 = 532.7;
			float pedl1 = 558.46;
			float pedl2 = 551.29;
			float pedl5 = 546.32;
			float pedl6 = 543.47;
			float pedl10 = 0.01; // SEM
			float pedl14 = 0.01; // SEM
			while (red >= 300 and maten >= mate) {
				cout << "Matemática " << endl;
				break;
			}
			while (red >= 300 and maten >= matel1 and ren >= 2 and esc >= 2) {
				cout << "Matemática para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and maten >= matel2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Matemática para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and maten >= matel5 and esc >= 2) {
				cout << "Matemática para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and maten >= matel6 and cor >= 2 and esc >= 2) {
				cout << "Matemática para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and maten >= matel10 and def >= 2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Matemática para candidato portador de deficiência, negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and maten >= matel14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Matemática para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and maten >= matea1 and ind >= 2) {
				cout << "Matemática para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and maten >= matea2 and qui >= 2) {
				cout << "Matemática para candidato quilombola" << endl;
				break;
			}
			while (red >= 300 and pedn >= ped) {
				cout << "Pedagogia " << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl1 and ren >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl2 and cor >= 2 and ren >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato negro, pardo ou indígena, com renda familiar bruta per capita igual ou inferior a 1,5 salário mínimo e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl5 and esc >= 2) {
				cout << "Pedagogia para candidato estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl6 and cor >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= pedl14 and def >= 2 and cor >= 2 and esc >= 2) {
				cout << "Pedagogia para candidato portador de deficiência, negro, pardo ou indígena e estudande de escola pública no ensino médio" << endl;
				break;
			}
			while (red >= 300 and pedn >= peda1 and ind >= 2) {
				cout << "Pedagogia para candidato indígena" << endl;
				break;
			}
			while (red >= 300 and pedn >= peda2 and qui >= 2) {
				cout << "Pedagogia para candidato quilombola" << endl;
				break;
			}
		}
		cout << "FRASE CRIPTOGRAFADA: 1000010010011110100000100100000010100110100111101010010010101000100010100100001 " << " " << endl;
		cout << "Você deseja fazer outra simulação?" << endl << "Se sim digite 1. Se não digite 0." << endl;
		cin >> rep;
	} while (rep != 0);
	getchar();
}
